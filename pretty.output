Feature: Calculator # features/calculator.feature:1

  Scenario: Add two positive numbers  # features/calculator.feature:3
    Given I have a calculator         # steps/calculator_steps.py:4
    When I add 8 and 5                # steps/calculator_steps.py:9
    Then the result should be 13      # steps/calculator_steps.py:48

  Scenario: Subtract two numbers  # features/calculator.feature:8
    Given I have a calculator     # steps/calculator_steps.py:4
    When I subtract 3 from 10     # steps/calculator_steps.py:18
    Then the result should be 7   # steps/calculator_steps.py:48

  Scenario: Multiply two numbers  # features/calculator.feature:13
    Given I have a calculator     # steps/calculator_steps.py:4
    When I multiply 4 and 2       # steps/calculator_steps.py:27
    Then the result should be 8   # steps/calculator_steps.py:48

  Scenario: Divide two numbers  # features/calculator.feature:18
    Given I have a calculator   # steps/calculator_steps.py:4
    When I divide 9 by 3        # steps/calculator_steps.py:36
    Then the result should be 3 # steps/calculator_steps.py:48

  Scenario: Add a positive and a negative number  # features/calculator.feature:23
    Given I have a calculator                     # steps/calculator_steps.py:4
    When I add 7 and -2                           # steps/calculator_steps.py:9
    Then the result should be 5                   # steps/calculator_steps.py:48

  Scenario: Divide by zero     # features/calculator.feature:28
    Given I have a calculator  # steps/calculator_steps.py:4
    When I divide 10 by 0      # steps/calculator_steps.py:36
    Then an error should occur # steps/calculator_steps.py:52

  Scenario: Add two large numbers     # features/calculator.feature:33
    Given I have a calculator         # steps/calculator_steps.py:4
    When I add 1000000 and 2000000    # steps/calculator_steps.py:9
    Then the result should be 3000000 # steps/calculator_steps.py:48

  Scenario: Subtract a larger number from a smaller number  # features/calculator.feature:38
    Given I have a calculator                               # steps/calculator_steps.py:4
    When I subtract 10 from 5                               # steps/calculator_steps.py:18
    Then the result should be -5                            # steps/calculator_steps.py:48

  Scenario: Multiply by zero    # features/calculator.feature:43
    Given I have a calculator   # steps/calculator_steps.py:4
    When I multiply 15 and 0    # steps/calculator_steps.py:27
    Then the result should be 0 # steps/calculator_steps.py:48

  Scenario: Divide a number by itself  # features/calculator.feature:48
    Given I have a calculator          # steps/calculator_steps.py:4
    When I divide 7 by 7               # steps/calculator_steps.py:36
    Then the result should be 1        # steps/calculator_steps.py:48

  Scenario: Divide a very large number                # features/calculator.feature:53
    Given I have a calculator                         # steps/calculator_steps.py:4
    When I divide 100000000000000000000000 by 2       # steps/calculator_steps.py:36
    Then the result should be 50000000000000000000000 # steps/calculator_steps.py:48
      Traceback (most recent call last):
        File "/usr/lib/python3/dist-packages/behave/model.py", line 1329, in run
          match.run(runner.context)
        File "/usr/lib/python3/dist-packages/behave/matchers.py", line 98, in run
          self.func(context, *args, **kwargs)
        File "steps/calculator_steps.py", line 50, in step_then_the_result_should_be
          assert context.result == expected_result
      AssertionError


